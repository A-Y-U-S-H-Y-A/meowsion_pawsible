<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <title>Onboarding</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-50">
  <section class="flex h-screen">
    <div class="min-h-screen flex items-center justify-center px-4 mx-auto">
      <div class="bg-white text-gray-900 w-full max-w-md p-8 rounded-lg shadow-lg space-y-6">
        <div class="flex justify-center">
          <img src="/logo.svg" alt="Meowsion Pawsible" class="h-10">
        </div>

        <h2 class="text-xl font-semibold text-center text-gray-800">Complete Your Profile</h2>

        <form id="onboardingForm" class="space-y-4">
          <!-- Location input -->
          <input type="text" id="locationQuery" placeholder="Enter your city, state, country"
            class="w-full px-4 py-3 rounded-md border border-gray-300 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:border-orange-400"
            value="<%= userDetails.city ? (userDetails.city + ', ' + userDetails.state + ', ' + userDetails.country) : '' %>" required />

          <input type="hidden" id="previousLocation" value="<%= userDetails.city ? (userDetails.city + ', ' + userDetails.state + ', ' + userDetails.country) : '' %>" />

          <!-- Displayed resolved location fields -->
          <div class="space-y-2">
            <input type="text" id="resolvedCity" placeholder="City"
              class="w-full px-4 py-3 rounded-md border border-gray-300 bg-gray-100 text-gray-600"
              value="<%= userDetails.city || '' %>" disabled />

            <input type="text" id="resolvedState" placeholder="State"
              class="w-full px-4 py-3 rounded-md border border-gray-300 bg-gray-100 text-gray-600"
              value="<%= userDetails.state || '' %>" disabled />

            <input type="text" id="resolvedCountry" placeholder="Country"
              class="w-full px-4 py-3 rounded-md border border-gray-300 bg-gray-100 text-gray-600"
              value="<%= userDetails.country || '' %>" disabled />
          </div>

          <!-- WhatsApp Number -->
          <label class="block text-sm font-medium text-gray-700">WhatsApp Number</label>
          <div class="relative w-full">
            <div class="flex space-x-2">
              <div class="relative w-1/3">
                <input type="text" id="codeInput" name="whatsappExt" placeholder="Search Code"
                  class="w-full px-4 py-3 rounded-md border border-gray-300 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:border-orange-400"
                  autocomplete="off"
                  value="<%= userDetails.whatsappExt || '' %>" />
                <ul id="codeList"
                  class="absolute z-10 w-full bg-white border border-gray-300 mt-1 rounded-md max-h-48 overflow-y-auto hidden rounded-md shadow-md">
                </ul>
              </div>
              <input type="text" id="whatsappLocal" name="whatsappNumber" placeholder="e.g. 9876543210"
                class="w-2/3 px-4 py-3 rounded-md border border-gray-300 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:border-orange-400"
                value="<%= userDetails.whatsappNumber || '' %>" required />
            </div>
          </div>

          <!-- Has Pets -->
          <div class="flex items-center space-x-3">
            <input type="checkbox" id="hasPets"
              class="w-4 h-4 text-orange-500 focus:ring-orange-400 border-gray-300 rounded"
              <%= userDetails.hasPets ? 'checked' : '' %> />
            <label for="hasPets" class="text-sm text-gray-700">I already have pets</label>
          </div>

          <p id="errorText" class="text-sm text-red-600 hidden"></p>

          <button type="submit"
            class="w-full bg-orange-500 hover:bg-orange-600 text-white py-3 rounded-md font-semibold transition duration-200">
            Continue
          </button>
        </form>
      </div>
    </div>
  </section>

  <script type="module">
    import { CountryCodes } from '/CountryCodes.js';

    const countries = CountryCodes;
    const validDialCodes = countries.map(({ dial_code }) => dial_code);

    const codeInput = document.getElementById("codeInput");
    const codeList = document.getElementById("codeList");

    function filterCodes(search) {
      return countries.filter(({ name, dial_code }) =>
        name.toLowerCase().includes(search.toLowerCase()) ||
        dial_code.includes(search)
      );
    }

    function renderDropdown(listElement, items, formatter, onSelect) {
      listElement.innerHTML = "";
      if (items.length === 0) {
        const li = document.createElement("li");
        li.textContent = "No match found";
        li.className = "px-4 py-2 text-gray-500";
        listElement.appendChild(li);
      } else {
        items.forEach(item => {
          const li = document.createElement("li");
          li.textContent = formatter(item);
          li.className = "px-4 py-2 cursor-pointer hover:bg-orange-100";
          li.addEventListener("click", () => {
            onSelect(item);
            listElement.classList.add("hidden");
          });
          listElement.appendChild(li);
        });
      }
      listElement.classList.remove("hidden");
    }

    codeInput.addEventListener("input", () => {
      const value = codeInput.value.trim();
      const results = filterCodes(value);
      renderDropdown(codeList, results, ({ dial_code, name }) => `${dial_code} (${name})`, ({ dial_code }) => {
        codeInput.value = dial_code;
      });
    });

    document.addEventListener("click", (e) => {
      if (!codeInput.contains(e.target) && !codeList.contains(e.target)) {
        codeList.classList.add("hidden");
      }
    });

    const locationQuery = document.getElementById("locationQuery");
    locationQuery.addEventListener("blur", async () => {
      const q = locationQuery.value.trim();
      if (!q || q.length < 3) return;

      try {
        const res = await fetch("/resolve-location", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ q })
        });

        const data = await res.json();
        if (res.ok && data.location) {
          document.getElementById("resolvedCity").value = data.location.city || '';
          document.getElementById("resolvedState").value = data.location.state || '';
          document.getElementById("resolvedCountry").value = data.location.country || '';
        } else {
          showError(data?.error || "Location not found.");
        }
      } catch (err) {
        console.error("Location resolve error:", err);
        showError("Could not resolve location.");
      }
    });

    document.getElementById("onboardingForm").addEventListener("submit", async (e) => {
      e.preventDefault();

      const q = document.getElementById("locationQuery").value.trim();
      const previousLocation = document.getElementById("previousLocation").value.trim();
      const whatsappExt = document.getElementById("codeInput").value.trim();
      const whatsappNumber = document.getElementById("whatsappLocal").value.trim();
      const hasPets = document.getElementById("hasPets").checked;

      if (!/^[+][0-9]{1,4}$/.test(whatsappExt) || !/^\d{6,12}$/.test(whatsappNumber)) {
        return showError("Enter a valid WhatsApp number.");
      }

      const payload = { q, previousLocation, whatsappExt, whatsappNumber, hasPets };

      try {
        const res = await fetch("/onboarding", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload)
        });

        const data = await res.json();
        if (res.ok) {
          window.location.href = "/preferences";
        } else {
          showError(data?.error || "Something went wrong.");
        }
      } catch (err) {
        console.error("Submit error:", err);
        showError("Network error.");
      }
    });

    function showError(msg) {
      const errorText = document.getElementById("errorText");
      errorText.textContent = msg;
      errorText.classList.remove("hidden");
    }
  </script>
</body>

</html>
